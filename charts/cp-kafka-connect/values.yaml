# Default values for cp-kafka-connect.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

## Image Info
## ref: https://hub.docker.com/r/confluentinc/cp-kafka/
image: mplascencia/kafka-connect-datagen
imageTag: latest

## Specify a imagePullPolicy
## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
imagePullPolicy: IfNotPresent

## Specify an array of imagePullSecrets.
## Secrets must be manually created in the namespace.
## ref: https://kubernetes.io/docs/concepts/containers/images/#specifying-imagepullsecrets-on-a-pod
imagePullSecrets:

servicePort: 8083

## Kafka Connect properties
## ref: https://docs.confluent.io/current/connect/userguide.html#configuring-workers
configurationOverrides:
  "plugin.path": "/usr/share/java,/usr/share/confluent-hub-components"
  "key.converter": "org.apache.kafka.connect.storage.StringConverter"
  "value.converter": "org.apache.kafka.connect.json.JsonConverter"
  "key.converter.schemas.enable": "false"
  "value.converter.schemas.enable": "false"
  "internal.key.converter": "org.apache.kafka.connect.json.JsonConverter"
  "internal.value.converter": "org.apache.kafka.connect.json.JsonConverter"
  "config.storage.replication.factor": "3"
  "offset.storage.replication.factor": "3"
  "status.storage.replication.factor": "3"
  "group.id": "ksql-cli-tutorial"
  "config.storage.topic": ksql-cli-tutorial-configs
  "offset.storage.topic": ksql-cli-tutorial-offsets
  "status.storage.topic": ksql-cli-tutorial-status
  "replication.factor": 3
  "log4j.root.loglevel": INFO
  "log4j.loggers": org.reflections=ERROR
  "classpath": /usr/share/java/monitoring-interceptors/monitoring-interceptors-5.0.1.jar
  "request.timeout.ms": 20000
  "retry.backoff.ms": 500
  # connect worker
  "security.protocol": SASL_SSL
  "sasl.jaas.config": "org.apache.kafka.common.security.plain.PlainLoginModule required username='KEY' password='SECRET';"
  "sasl.mechanism": PLAIN
  "ssl.endpoint.identification.algorithm": "HTTPS"
  # connect producer
  "producer.security.protocol": SASL_SSL
  "producer.sasl.jaas.config": "org.apache.kafka.common.security.plain.PlainLoginModule required username='KEY' password='SECRET';"
  "producer.sasl.mechanism": PLAIN
  "producer.interceptor.classes": "io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor"
  "producer.confluent.monitoring.interceptor.security.protocol": SASL_SSL
  "producer.confluent.monitoring.interceptor.sasl.jaas.config": "org.apache.kafka.common.security.plain.PlainLoginModule required username='KEY' password='SECRET';"
  "producer.confluent.monitoring.interceptor.sasl.mechanism": PLAIN
  # connect consumer
  "consumer.security.protocol": SASL_SSL
  "consumer.sasl.jaas.config": "org.apache.kafka.common.security.plain.PlainLoginModule required username='KEY' password='SECRET';"
  "consumer.sasl.mechanism": PLAIN
  "consumer.interceptor.classes": "io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor"
  "consumer.confluent.monitoring.interceptor.security.protocol": SASL_SSL
  "consumer.confluent.monitoring.interceptor.sasl.jaas.config": "org.apache.kafka.common.security.plain.PlainLoginModule required username='KEY' password='SECRET';"
  "consumer.confluent.monitoring.interceptor.sasl.mechanism": PLAIN


## Kafka Connect JVM Heap Option
heapOptions: "-Xms512M -Xmx512M"

## Additional env variables
customEnv: {}

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #  cpu: 100m
  #  memory: 128Mi
  # requests:
  #  cpu: 100m
  #  memory: 128Mi

## Custom pod annotations
podAnnotations: {}

## Node labels for pod assignment
## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
nodeSelector: {}

## Taints to tolerate on node assignment:
## Ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
tolerations: {}

## Monitoring
## Kafka Connect JMX Settings
## ref: https://kafka.apache.org/documentation/#connect_monitoring
jmx:
  port: 5555

## Prometheus Exporter Configuration
## ref: https://prometheus.io/docs/instrumenting/exporters/
prometheus:
  ## JMX Exporter Configuration
  ## ref: https://github.com/prometheus/jmx_exporter
  jmx:
    enabled: true
    image: solsson/kafka-prometheus-jmx-exporter@sha256
    imageTag: 6f82e2b0464f50da8104acd7363fb9b995001ddff77d248379f8788e78946143
    port: 5556

    ## Resources configuration for the JMX exporter container.
    ## See the `resources` documentation above for details.
    resources: {}

## You can list load balanced service endpoint, or list of all brokers (which is hard in K8s).  e.g.:
## bootstrapServers: "PLAINTEXT://dozing-prawn-kafka-headless:9092"
kafka:
  bootstrapServers: "SASL_SSL://subdomain.confluent.cloud:9092"

## If the Kafka Chart is disabled a URL and port are required to connect
## e.g. gnoble-panther-cp-schema-registry:8081
cp-schema-registry:
  url: ""
